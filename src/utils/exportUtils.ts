// Utility functions for exporting insights and reports

export const exportInsightToText = (insight: any): string => {
  const date = new Date(insight.created_at).toLocaleDateString()
  const period = insight.data_period_start && insight.data_period_end 
    ? `${new Date(insight.data_period_start).toLocaleDateString()} - ${new Date(insight.data_period_end).toLocaleDateString()}`
    : 'Recent data'

  return `
STAFFPULSE AI INSIGHT REPORT
============================

Title: ${insight.title}
Type: ${insight.insight_type}
Priority: ${insight.priority}
Confidence: ${Math.round(insight.confidence_score * 100)}%
Generated: ${date}
Data Period: ${period}
${insight.employee_name ? `Employee: ${insight.employee_name} (${insight.department})` : ''}
${insight.scope ? `Scope: ${insight.scope}` : ''}

INSIGHT CONTENT:
${insight.content}

---
Generated by StaffPulse AI Insights
Powered by OpenRouter DeepSeek V3
  `.trim()
}

export const exportInsightsToCSV = (insights: any[]): string => {
  const headers = [
    'Date',
    'Title', 
    'Type',
    'Priority',
    'Confidence',
    'Scope',
    'Employee',
    'Department',
    'Content'
  ]

  const rows = insights.map(insight => [
    new Date(insight.created_at).toLocaleDateString(),
    insight.title,
    insight.insight_type,
    insight.priority,
    Math.round(insight.confidence_score * 100) + '%',
    insight.scope || 'organization',
    insight.employee_name || '',
    insight.department || '',
    `"${insight.content.replace(/"/g, '""')}"`
  ])

  return [headers.join(','), ...rows.map(row => row.join(','))].join('\n')
}

export const downloadFile = (content: string, filename: string, type: string = 'text/plain') => {
  const blob = new Blob([content], { type })
  const url = URL.createObjectURL(blob)
  const link = document.createElement('a')
  link.href = url
  link.download = filename
  document.body.appendChild(link)
  link.click()
  document.body.removeChild(link)
  URL.revokeObjectURL(url)
}

export const exportSingleInsight = (insight: any) => {
  const content = exportInsightToText(insight)
  const filename = `insight-${insight.id}-${new Date().toISOString().split('T')[0]}.txt`
  downloadFile(content, filename)
}

export const exportAllInsights = (insights: any[], format: 'csv' | 'txt' = 'csv') => {
  if (format === 'csv') {
    const content = exportInsightsToCSV(insights)
    const filename = `staffpulse-insights-${new Date().toISOString().split('T')[0]}.csv`
    downloadFile(content, filename, 'text/csv')
  } else {
    const content = insights.map(exportInsightToText).join('\n\n' + '='.repeat(50) + '\n\n')
    const filename = `staffpulse-insights-${new Date().toISOString().split('T')[0]}.txt`
    downloadFile(content, filename)
  }
}
